openapi: 3.0.0
info:
  title: ga4gh/read_service.proto
  version: version not set
paths:
  /v0.6.0a10/readgroupsets/search:
    post:
      summary: Gets a list of `ReadGroupSet` matching the search criteria.
      description: |-
        `POST /readgroupsets/search` must accept a JSON version of
        `SearchReadGroupSetsRequest` as the post body and will return a JSON
        version of `SearchReadGroupSetsResponse` . Only readgroups that
        match an optionally supplied biosampleId will be included in the
        response.
      operationId: SearchReadGroupSets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchReadGroupSetsResponse'
      tags:
        - ReadService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchReadGroupSetsRequest'
        required: true
  '/v0.6.0a10/readgroupsets/{read_group_set_id}':
    get:
      summary: Gets a `ReadGroupSet` by ID.
      description: |-
        `GET /readgroupsets/{read_group_set_id}` will return a JSON version of
        `ReadGroupSet`.
      operationId: GetReadGroupSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadGroupSet'
      parameters:
        - name: read_group_set_id
          description: The ID of the `ReadGroupSet` to be retrieved.
          in: path
          required: true
          schema:
            type: string
      tags:
        - ReadService
  /v0.6.0a10/reads/search:
    post:
      summary: Gets a list of `ReadAlignment` s for one or more `ReadGroup` s.
      description: >-
        `searchReads` operates over a genomic coordinate space of reference
        sequence

        and position defined by the `Reference` s to which the requested
        `ReadGroup` s are

        aligned.


        If a target positional range is specified, search returns all reads
        whose

        alignment to the reference genome *overlap* the range. A query which
        specifies

        only read group IDs yields all reads in those read groups, including
        unmapped

        reads.


        All reads returned (including reads on subsequent pages) are ordered by
        genomic

        coordinate (by reference sequence, then position). Reads with equivalent
        genomic

        coordinates are returned in an unspecified order. This order must be
        consistent

        for a given repository, such that two queries for the same content
        (regardless

        of page size) yield reads in the same order across their respective
        streams of

        paginated responses.


        `POST /reads/search` must accept a JSON version of `SearchReadsRequest`
        as

        the post body and will return a JSON version of `SearchReadsResponse`.
      operationId: SearchReads
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchReadsResponse'
      tags:
        - ReadService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchReadsRequest'
        required: true
components:
  schemas:
    CigarUnitOperation:
      type: string
      enum:
        - OPERATION_UNSPECIFIED
        - ALIGNMENT_MATCH
        - INSERT
        - DELETE
        - SKIP
        - CLIP_SOFT
        - CLIP_HARD
        - PAD
        - SEQUENCE_MATCH
        - SEQUENCE_MISMATCH
      default: OPERATION_UNSPECIFIED
      description: >-
        Describes the different types of CIGAR alignment operations that exist.

        Used wherever CIGAR alignments are used.

         - OPERATION_UNSPECIFIED: The null operation.
         - ALIGNMENT_MATCH: An alignment match indicates that a sequence can be aligned to the
        reference without evidence of an INDEL. Unlike the

        `SEQUENCE_MATCH` and `SEQUENCE_MISMATCH` operators,

        the `ALIGNMENT_MATCH` operator does not indicate whether the

        reference and read sequences are an exact match. This operator is

        equivalent to SAM's `M`.
         - INSERT: The insert operator indicates that the read contains evidence of bases
        being inserted into the reference. This operator is equivalent to SAM's

        `I`.
         - DELETE: The delete operator indicates that the read contains evidence of bases
        being deleted from the reference. This operator is equivalent to SAM's

        `D`.
         - SKIP: The skip operator indicates that this read skips a long segment of the
        reference, but the bases have not been deleted. This operator is
        commonly

        used when working with RNA-seq data, where reads may skip long segments

        of the reference between exons. This operator is equivalent to SAM's

        `N`.
         - CLIP_SOFT: The soft clip operator indicates that bases at the start/end of a read
        have not been considered during alignment. This may occur if the
        majority

        of a read maps, except for low quality bases at the start/end of a read.

        This operator is equivalent to SAM's `S`. Bases that are soft

        clipped will still be stored in the read.
         - CLIP_HARD: The hard clip operator indicates that bases at the start/end of a read
        have been omitted from this alignment. This may occur if this linear

        alignment is part of a chimeric alignment, or if the read has been

        trimmed (for example, during error correction or to trim poly-A tails
        for

        RNA-seq). This operator is equivalent to SAM's `H`.
         - PAD: The pad operator indicates that there is padding in an alignment. This
        operator is equivalent to SAM's `P`.
         - SEQUENCE_MATCH: This operator indicates that this portion of the aligned sequence exactly
        matches the reference. This operator is equivalent to SAM's `=`.
         - SEQUENCE_MISMATCH: This operator indicates that this portion of the aligned sequence is an
        alignment match to the reference, but a sequence mismatch. This can

        indicate a SNP or a read error. This operator is equivalent to SAM's

        `X`.
    ga4ghAnalysis:
      type: object
      properties:
        id:
          type: string
          description: |-
            Formats of id | name | description | accessions are described in the
            documentation on general attributes and formats.
        name:
          type: string
        description:
          type: string
        created:
          type: string
          description: 'The time at which this record was created, in ISO 8601 format.'
        updated:
          type: string
          description: 'The time at which this record was last updated, in ISO 8601 format.'
        type:
          type: string
          description: The type of analysis.
        software:
          type: array
          items:
            type: string
          description: The software run to generate this analysis.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: >-
        An analysis contains an interpretation of one or several experiments.
        (e.g.

        SNVs, copy number variations, methylation status) together with
        information

        about the methodology used.
    ga4ghAttributeValue:
      type: object
      properties:
        string_value:
          type: string
        int64_value:
          type: string
          format: int64
        int32_value:
          type: integer
          format: int32
        bool_value:
          type: boolean
          format: boolean
        double_value:
          type: number
          format: double
        external_identifier:
          $ref: '#/components/schemas/ExternalIdentifier'
        ontology_term:
          $ref: '#/components/schemas/OntologyTerm'
        experiment:
          $ref: '#/components/schemas/Experiment'
        program:
          $ref: '#/components/schemas/Program'
        analysis:
          $ref: '#/components/schemas/Analysis'
        null_value:
          $ref: '#/components/schemas/NullValue'
        attributes:
          $ref: '#/components/schemas/Attributes'
        attribute_list:
          $ref: '#/components/schemas/AttributeValueList'
      description: >-
        Type defining a collection of attributes associated with various
        protocol

        records. Each attribute is a name that maps to an array of one or more

        values. Values are chosen from both internal protobuf types and GA4GH.
         Values should be split into array elements instead of using a separator
        syntax that needs to parsed.
    ga4ghAttributeValueList:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
    ga4ghAttributes:
      type: object
      properties:
        attr:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AttributeValueList'
    ga4ghCigarUnit:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/CigarUnitOperation'
        operation_length:
          type: string
          format: int64
          description: The number of genomic bases that the operation runs for. Required.
        reference_sequence:
          type: string
          description: >-
            `referenceSequence` is only used at mismatches

            (`SEQUENCE_MISMATCH`) and deletions (`DELETE`).

            Filling this field replaces SAM's MD tag. If the relevant
            information is

            not available, this field is unset.
      description: A single CIGAR operation.
    ga4ghExperiment:
      type: object
      properties:
        id:
          type: string
          title: The experiment ID
        name:
          type: string
          description: The name of the experiment.
        description:
          type: string
          description: A description of the experiment.
        message_create_time:
          type: string
          title: >-
            The time at which this message was created.

            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g.
            2015-02-10T00:03:42.123Z)
        message_update_time:
          type: string
          title: >-
            The time at which this message was last updated.

            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g.
            2015-02-10T00:03:42.123Z)
        run_time:
          type: string
          title: |-
            The time at which this experiment was performed.
            Granularity here is variable (e.g. date only).
            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
        molecule:
          type: string
          title: >-
            The molecule examined in this experiment. (e.g. genomics DNA, total
            RNA)
        strategy:
          type: string
          title: |-
            The experiment technique or strategy applied to the sample.
            (e.g. whole genome sequencing, RNA-seq, RIP-seq)
        selection:
          type: string
          title: >-
            The method used to enrich the target. (e.g. immunoprecipitation,
            size

            fractionation, MNase digestion)
        library:
          type: string
          description: The name of the library used as part of this experiment.
        library_layout:
          type: string
          description: The configuration of sequenced reads. (e.g. Single or Paired).
        instrument_model:
          type: string
          description: |-
            The instrument model used as part of this experiment.
            This maps to sequencing technology in BAM.
        instrument_data_file:
          type: string
          title: |-
            The data file generated by the instrument.
            TODO: This isn't actually a file is it?
            Should this be `instrumentData` instead?
        sequencing_center:
          type: string
          description: The sequencing center used as part of this experiment.
        platform_unit:
          type: string
          description: |-
            The platform unit used as part of this experiment. This is a
            flowcell-barcode
            or slide unique identifier.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: An experimental preparation of a sample.
    ga4ghExternalIdentifier:
      type: object
      properties:
        database:
          type: string
          description: 'The source of the identifier, e.g. `Ensembl`.'
        identifier:
          type: string
          description: 'The ID defined by the external database, e.g. `ENST00000000000`.'
        version:
          type: string
          description: 'The version of the object or the database, e.g. `78`.'
      title: Identifier from a public database
    ga4ghLinearAlignment:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/Position'
        mapping_quality:
          type: integer
          format: int32
          description: >-
            The mapping quality of this alignment, meaning the likelihood that
            the read

            maps to this position.


            Specifically, this is -10 log10 Pr(mapping position is wrong),
            rounded to

            the nearest integer.
        cigar:
          type: array
          items:
            $ref: '#/components/schemas/CigarUnit'
          description: >-
            Represents the local alignment of this sequence (alignment matches,
            indels,

            etc)

            versus the reference.
      description: >-
        A linear alignment describes the alignment of a read to a Reference,
        using a

        position and CIGAR array.
    ga4ghNullValue:
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
      description: ' - NULL_VALUE: Null value.'
    ga4ghOntologyTerm:
      type: object
      properties:
        term_id:
          type: string
          description: >-
            Ontology term identifier - the CURIE for an ontology term. It

            differs from the standard GA4GH schema's :ref:`id
            `

            in that it is a CURIE pointing to an information resource outside of
            the

            scope of the schema or its resource implementation.
        term:
          type: string
          description: >-
            Ontology term - the label of the ontology term the termId is
            pointing to.
      title: |-
        An ontology term describing an attribute. (e.g. the phenotype attribute
        'polydactyly' from HPO)
    ga4ghPosition:
      type: object
      properties:
        reference_name:
          type: string
          description: The name of the `Reference` on which the `Position` is located.
        position:
          type: string
          format: int64
          description: |-
            The 0-based offset from the start of the forward strand for that
            `Reference`. Genomic positions are non-negative integers less than
            `Reference` length.
        strand:
          $ref: '#/components/schemas/Strand'
      description: |-
        A `Position` is an unoriented base in some `Reference`. A `Position` is
        represented by a `Reference` name, and a base number on that `Reference`
        (0-based).
    ga4ghProgram:
      type: object
      properties:
        command_line:
          type: string
          description: The command line used to run this program.
        id:
          type: string
          description: The user specified ID of the program.
        name:
          type: string
          description: The name of the program.
        prev_program_id:
          type: string
          description: The ID of the program run before this one.
        version:
          type: string
          description: The version of the program run.
      description: A Program describes software used in data processing or analysis.
    ga4ghReadAlignment:
      type: object
      properties:
        id:
          type: string
          description: >-
            The read alignment ID. This ID is unique within the read group this

            alignment belongs to.


            For performance reasons, this field may be omitted by a backend.

            If provided, its intended use is to make caching and UI display
            easier for

            genome browsers and other lightweight clients.
        read_group_id:
          type: string
          title: |-
            The ID of the read group this read belongs to.
            (Every read must belong to exactly one read group.)
        fragment_name:
          type: string
          description: The fragment name. Equivalent to QNAME (query template name) in SAM.
        improper_placement:
          type: boolean
          format: boolean
          description: |-
            The orientation and the distance between reads from the fragment are
            inconsistent with the sequencing protocol (inverse of SAM flag 0x2).
        duplicate_fragment:
          type: boolean
          format: boolean
          description: The fragment is a PCR or optical duplicate (SAM flag 0x400).
        number_reads:
          type: integer
          format: int32
          description: The number of reads in the fragment (extension to SAM flag 0x1).
        fragment_length:
          type: integer
          format: int32
          description: 'The observed length of the fragment, equivalent to TLEN in SAM.'
        read_number:
          type: integer
          format: int32
          description: >-
            The read ordinal in the fragment, 0-based and less than numberReads.
            This

            field replaces SAM flag 0x40 and 0x80 and is intended to more
            cleanly

            represent multiple reads per fragment.
        failed_vendor_quality_checks:
          type: boolean
          format: boolean
          description: The read fails platform or vendor quality checks (SAM flag 0x200).
        alignment:
          $ref: '#/components/schemas/LinearAlignment'
        secondary_alignment:
          type: boolean
          format: boolean
          description: >-
            Whether this alignment is secondary. Equivalent to SAM flag 0x100.

            A secondary alignment represents an alternative to the primary
            alignment

            for this read. Aligners may return secondary alignments if a read
            can map

            ambiguously to multiple coordinates in the genome.


            By convention, each read has one and only one alignment where both

            secondaryAlignment and supplementaryAlignment are false.
        supplementary_alignment:
          type: boolean
          format: boolean
          description: >-
            Whether this alignment is supplementary. Equivalent to SAM flag
            0x800.

            Supplementary alignments are used in the representation of a
            chimeric

            alignment. In a chimeric alignment, a read is split into multiple

            linear alignments that map to different reference contigs. The first

            linear alignment in the read will be designated as the
            representative

            alignment; the remaining linear alignments will be designated as

            supplementary alignments. These alignments may have different
            mapping

            quality scores.


            In each linear alignment in a chimeric alignment, the read will be
            hard

            clipped. The `alignedSequence` and `alignedQuality` fields in the
            alignment

            message will only represent the bases for its respective linear
            alignment.
        aligned_sequence:
          type: string
          description: >-
            The bases of the read sequence contained in this alignment record

            (equivalent to SEQ in SAM).


            `alignedSequence` and `alignedQuality` may be shorter than the full
            read

            sequence and quality. This will occur if the alignment is part of a

            chimeric alignment, or if the read was trimmed. When this occurs,
            the CIGAR

            for this read will begin/end with a hard clip operator that will
            indicate

            the length of the excised sequence.
        aligned_quality:
          type: array
          items:
            type: integer
            format: int32
          description: >-
            The quality of the read sequence contained in this alignment message

            (equivalent to QUAL in SAM).


            `alignedSequence` and `alignedQuality` may be shorter than the full
            read

            sequence and quality. This will occur if the alignment is part of a

            chimeric alignment, or if the read was trimmed. When this occurs,
            the CIGAR

            for this read will begin/end with a hard clip operator that will
            indicate

            the length of the excised sequence.
        next_mate_position:
          $ref: '#/components/schemas/Position'
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: >-
        Each read alignment describes an alignment with additional information

        about the fragment and the read. A read alignment object is equivalent
        to a

        line in a SAM file.
    ga4ghReadGroup:
      type: object
      properties:
        id:
          type: string
          description: The read group ID.
        dataset_id:
          type: string
          description: The ID of the dataset this read group belongs to.
        name:
          type: string
          description: The read group name.
        description:
          type: string
          description: The read group description.
        sample_name:
          type: string
          description: |-
            A name for the sample this read group's data were generated from.
            This field contains an arbitrary string, typically
            corresponding to the SM tag in a BAM file.
        biosample_id:
          type: string
          description: The Biosample this read group's data was generated from.
        experiment:
          $ref: '#/components/schemas/Experiment'
        predicted_insert_size:
          type: integer
          format: int32
          description: The predicted insert size of this read group.
        created:
          type: string
          format: int64
          description: >-
            The time at which this read group was created in milliseconds from
            the

            epoch.
        updated:
          type: string
          format: int64
          description: |-
            The time at which this read group was last updated in milliseconds
            from the epoch.
        stats:
          $ref: '#/components/schemas/ReadStats'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program'
        reference_set_id:
          type: string
          description: >-
            The ID of the reference set to which the reads in this read group
            are

            aligned. Required if there are any read alignments.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: >-
        A ReadGroup is a set of reads derived from one physical sequencing
        process.
    ga4ghReadGroupSet:
      type: object
      properties:
        id:
          type: string
          description: The read group set ID.
        dataset_id:
          type: string
          description: The ID of the dataset this read group set belongs to.
        name:
          type: string
          description: The read group set name.
        stats:
          $ref: '#/components/schemas/ReadStats'
        read_groups:
          type: array
          items:
            $ref: '#/components/schemas/ReadGroup'
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: |-
        A ReadGroupSet is a logical collection of ReadGroups. Typically one
        ReadGroupSet represents all the reads from one experimental sample.
    ga4ghReadStats:
      type: object
      properties:
        aligned_read_count:
          type: string
          format: int64
          description: The number of aligned reads.
        unaligned_read_count:
          type: string
          format: int64
          description: The number of unaligned reads.
        base_count:
          type: string
          format: int64
          description: >-
            The total number of bases.

            This is equivalent to the sum of `alignedSequence.length` for all
            reads.
      description: ReadStats can be used to provide summary statistics about read data.
    ga4ghSearchReadGroupSetsRequest:
      type: object
      properties:
        dataset_id:
          type: string
          description: The dataset to search.
        name:
          type: string
          description: >-
            Only return read group sets with this name (case-sensitive, exact
            match).
        biosample_id:
          type: string
          description: |-
            Specifying the id of a Biosample record will return only readgroups
             with the given biosampleId.
        page_size:
          type: integer
          format: int32
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.
      description: >-
        This request maps to the body of `POST /readgroupsets/search` as JSON.


        TODO: Factor this out to a common API patterns section.

        - If searching by a resource ID, and that resource is not found, the
        method
          will return a `404` HTTP status code (`NOT_FOUND`).
        - If searching by other attributes, e.g. `name`, and no matches are
        found, the
          method will return a `200` HTTP status code (`OK`) with an empty result list.
    ga4ghSearchReadGroupSetsResponse:
      type: object
      properties:
        read_group_sets:
          type: array
          items:
            $ref: '#/components/schemas/ReadGroupSet'
          description: The list of matching read group sets.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: >-
        This is the response from `POST /readgroupsets/search` expressed as
        JSON.
    ga4ghSearchReadsRequest:
      type: object
      properties:
        read_group_ids:
          type: array
          items:
            type: string
          description: The ReadGroups to search. At least one id must be specified.
        reference_id:
          type: string
          description: |-
            The reference to query. Leaving blank returns results from all
            references, including unmapped reads - this could be very large.
        start:
          type: string
          format: int64
          description: >-
            The start position (0-based) of this query.

            If a reference is specified, this defaults to 0.

            Genomic positions are non-negative integers less than reference
            length.

            Requests spanning the join of circular genomes are represented as

            two requests one on each side of the join (position 0).
        end:
          type: string
          format: int64
          description: |-
            The end position (0-based, exclusive) of this query.
            If a reference is specified, this defaults to the
            reference's length.
        page_size:
          type: integer
          format: int32
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.
      description: |-
        ******************  /reads  *********************
        This request maps to the body of `POST /reads/search` as JSON.

        If a reference is specified, all queried `ReadGroup`s must be aligned
        to `ReferenceSet`s containing that same `Reference`. If no reference is
        specified, all `ReadGroup`s must be aligned to the same `ReferenceSet`.
    ga4ghSearchReadsResponse:
      type: object
      properties:
        alignments:
          type: array
          items:
            $ref: '#/components/schemas/ReadAlignment'
          description: |-
            The list of matching alignment messages, sorted by position.
            Unmapped reads, which have no position, are returned last.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: This is the response from `POST /reads/search` expressed as JSON.
    ga4ghStrand:
      type: string
      enum:
        - STRAND_UNSPECIFIED
        - NEG_STRAND
        - POS_STRAND
      default: STRAND_UNSPECIFIED
      description: |-
        Indicates the associated DNA strand for some data item.

         - STRAND_UNSPECIFIED: If no strand data is available.
         - NEG_STRAND: The negative (-) strand.
         - POS_STRAND: The postive (+) strand.