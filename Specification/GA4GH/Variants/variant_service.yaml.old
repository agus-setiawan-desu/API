openapi: 3.0.0
info:
  title: ga4gh/variant_service.proto
  version: version not set
paths:
  /v0.6.0a10/callsets/search:
    post:
      summary: Gets a list of call sets matching the search criteria.
      description: >-
        `POST /callsets/search` must accept a JSON version of

        `SearchCallSetsRequest` as the post body and will return a JSON version
        of

        `SearchCallSetsResponse`.
      operationId: SearchCallSets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCallSetsResponse'
      tags:
        - VariantService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCallSetsRequest'
        required: true
  '/v0.6.0a10/callsets/{call_set_id}':
    get:
      summary: Gets a `CallSet` by ID.
      description: '`GET /callsets/{id}` will return a JSON version of `CallSet`.'
      operationId: GetCallSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallSet'
      parameters:
        - name: call_set_id
          description: The ID of the `CallSet` to be retrieved.
          in: path
          required: true
          schema:
            type: string
      tags:
        - VariantService
  /v0.6.0a10/variants/search:
    post:
      summary: Gets a list of `Variant` matching the search criteria.
      description: >-
        `POST /variants/search` must accept a JSON version of

        `SearchVariantsRequest` as the post body and will return a JSON version
        of

        `SearchVariantsResponse`.
      operationId: SearchVariants
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchVariantsResponse'
      tags:
        - VariantService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchVariantsRequest'
        required: true
  '/v0.6.0a10/variants/{variant_id}':
    post:
      summary: Gets a `Variant` by ID.
      description: '`GET /variants/{id}` will return a JSON version of `Variant`.'
      operationId: GetVariant
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
      parameters:
        - name: variant_id
          description: The ID of the `Variant` to be retrieved.
          in: path
          required: true
          schema:
            type: string
      tags:
        - VariantService
  /v0.6.0a10/variantsets/search:
    post:
      summary: Gets a list of `VariantSet` matching the search criteria.
      description: >-
        `POST /variantsets/search` must accept a JSON version of

        `SearchVariantSetsRequest` as the post body and will return a JSON
        version

        of `SearchVariantSetsResponse`.
      operationId: SearchVariantSets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchVariantSetsResponse'
      tags:
        - VariantService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchVariantSetsRequest'
        required: true
  '/v0.6.0a10/variantsets/{variant_set_id}':
    get:
      summary: Gets a `VariantSet` by ID.
      description: |-
        `GET /variantsets/{variant_set_id}` will return a JSON version of
        `VariantSet`.
      operationId: GetVariantSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantSet'
      parameters:
        - name: variant_set_id
          description: The ID of the `VariantSet` to be retrieved.
          in: path
          required: true
          schema:
            type: string
      tags:
        - VariantService
components:
  schemas:
    ga4ghAnalysis:
      type: object
      properties:
        id:
          type: string
          description: |-
            Formats of id | name | description | accessions are described in the
            documentation on general attributes and formats.
        name:
          type: string
        description:
          type: string
        created:
          type: string
          description: 'The time at which this record was created, in ISO 8601 format.'
        updated:
          type: string
          description: 'The time at which this record was last updated, in ISO 8601 format.'
        type:
          type: string
          description: The type of analysis.
        software:
          type: array
          items:
            type: string
          description: The software run to generate this analysis.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: >-
        An analysis contains an interpretation of one or several experiments.
        (e.g.

        SNVs, copy number variations, methylation status) together with
        information

        about the methodology used.
    ga4ghAttributeValue:
      type: object
      properties:
        string_value:
          type: string
        int64_value:
          type: string
          format: int64
        int32_value:
          type: integer
          format: int32
        bool_value:
          type: boolean
          format: boolean
        double_value:
          type: number
          format: double
        external_identifier:
          $ref: '#/components/schemas/ExternalIdentifier'
        ontology_term:
          $ref: '#/components/schemas/OntologyTerm'
        experiment:
          $ref: '#/components/schemas/Experiment'
        program:
          $ref: '#/components/schemas/Program'
        analysis:
          $ref: '#/components/schemas/Analysis'
        null_value:
          $ref: '#/components/schemas/NullValue'
        attributes:
          $ref: '#/components/schemas/Attributes'
        attribute_list:
          $ref: '#/components/schemas/AttributeValueList'
      description: >-
        Type defining a collection of attributes associated with various
        protocol

        records. Each attribute is a name that maps to an array of one or more

        values. Values are chosen from both internal protobuf types and GA4GH.
         Values should be split into array elements instead of using a separator
        syntax that needs to parsed.
    ga4ghAttributeValueList:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
    ga4ghAttributes:
      type: object
      properties:
        attr:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AttributeValueList'
    ga4ghCall:
      type: object
      properties:
        call_set_name:
          type: string
          description: >-
            The name of the call set this variant call belongs to.

            If this field is not present, the ordering of the call sets from a

            `SearchCallSetsRequest` over this `VariantSet` is guaranteed to
            match

            the ordering of the calls on this `Variant`.

            The number of results will also be the same.
        call_set_id:
          type: string
          description: >-
            The ID of the call set this variant call belongs to.


            If this field is not present, the ordering of the call sets from a

            `SearchCallSetsRequest` over this `VariantSet` is guaranteed to
            match

            the ordering of the calls on this `Variant`.

            The number of results will also be the same.
        genotype:
          $ref: '#/components/schemas/ListValue'
        phaseset:
          type: string
          description: >-
            If this field is populated, this variant call's genotype ordering
            implies

            the phase of the bases and is consistent with any other variant
            calls on

            the same contig which have the same phaseset string.
        genotype_likelihood:
          type: array
          items:
            type: number
            format: double
          description: >-
            The genotype likelihoods for this variant call. Each array entry

            represents how likely a specific genotype is for this call as

            log10(P(data | genotype)), analogous to the GL tag in the VCF spec.
            The

            value ordering is defined by the GL tag in the VCF spec.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: >-
        A `Call` represents the determination of genotype with respect to a

        particular `Variant`.


        It may include associated information such as quality

        and phasing. For example, a call might assign a probability of 0.32 to

        the occurrence of a SNP named rs1234 in a call set with the name
        NA12345.
    ga4ghCallSet:
      type: object
      properties:
        id:
          type: string
          description: The call set ID.
        name:
          type: string
          description: The call set name.
        biosample_id:
          type: string
          description: The Biosample the call set data was generated from.
        variant_set_ids:
          type: array
          items:
            type: string
          description: The IDs of the variant sets this call set has calls in.
        created:
          type: string
          format: int64
          description: The date this call set was created in milliseconds from the epoch.
        updated:
          type: string
          format: int64
          description: |-
            The time at which this call set was last updated in
            milliseconds from the epoch.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: >-
        A CallSet is a collection of calls that were generated by the same
        analysis

        of the same sample.
    ga4ghExperiment:
      type: object
      properties:
        id:
          type: string
          title: The experiment ID
        name:
          type: string
          description: The name of the experiment.
        description:
          type: string
          description: A description of the experiment.
        message_create_time:
          type: string
          title: >-
            The time at which this message was created.

            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g.
            2015-02-10T00:03:42.123Z)
        message_update_time:
          type: string
          title: >-
            The time at which this message was last updated.

            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g.
            2015-02-10T00:03:42.123Z)
        run_time:
          type: string
          title: |-
            The time at which this experiment was performed.
            Granularity here is variable (e.g. date only).
            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
        molecule:
          type: string
          title: >-
            The molecule examined in this experiment. (e.g. genomics DNA, total
            RNA)
        strategy:
          type: string
          title: |-
            The experiment technique or strategy applied to the sample.
            (e.g. whole genome sequencing, RNA-seq, RIP-seq)
        selection:
          type: string
          title: >-
            The method used to enrich the target. (e.g. immunoprecipitation,
            size

            fractionation, MNase digestion)
        library:
          type: string
          description: The name of the library used as part of this experiment.
        library_layout:
          type: string
          description: The configuration of sequenced reads. (e.g. Single or Paired).
        instrument_model:
          type: string
          description: |-
            The instrument model used as part of this experiment.
            This maps to sequencing technology in BAM.
        instrument_data_file:
          type: string
          title: |-
            The data file generated by the instrument.
            TODO: This isn't actually a file is it?
            Should this be `instrumentData` instead?
        sequencing_center:
          type: string
          description: The sequencing center used as part of this experiment.
        platform_unit:
          type: string
          description: |-
            The platform unit used as part of this experiment. This is a
            flowcell-barcode
            or slide unique identifier.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: An experimental preparation of a sample.
    ga4ghExternalIdentifier:
      type: object
      properties:
        database:
          type: string
          description: 'The source of the identifier, e.g. `Ensembl`.'
        identifier:
          type: string
          description: 'The ID defined by the external database, e.g. `ENST00000000000`.'
        version:
          type: string
          description: 'The version of the object or the database, e.g. `78`.'
      title: Identifier from a public database
    ga4ghNullValue:
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
      description: ' - NULL_VALUE: Null value.'
    ga4ghOntologyTerm:
      type: object
      properties:
        term_id:
          type: string
          description: >-
            Ontology term identifier - the CURIE for an ontology term. It

            differs from the standard GA4GH schema's :ref:`id
            `

            in that it is a CURIE pointing to an information resource outside of
            the

            scope of the schema or its resource implementation.
        term:
          type: string
          description: >-
            Ontology term - the label of the ontology term the termId is
            pointing to.
      title: |-
        An ontology term describing an attribute. (e.g. the phenotype attribute
        'polydactyly' from HPO)
    ga4ghProgram:
      type: object
      properties:
        command_line:
          type: string
          description: The command line used to run this program.
        id:
          type: string
          description: The user specified ID of the program.
        name:
          type: string
          description: The name of the program.
        prev_program_id:
          type: string
          description: The ID of the program run before this one.
        version:
          type: string
          description: The version of the program run.
      description: A Program describes software used in data processing or analysis.
    ga4ghSearchCallSetsRequest:
      type: object
      properties:
        variant_set_id:
          type: string
          description: The VariantSet to search.
        name:
          type: string
          description: 'Only return call sets with this name (case-sensitive, exact match).'
        biosample_id:
          type: string
          description: Return only call sets generated from the provided Biosample ID.
        page_size:
          type: integer
          format: int32
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.
      description: |-
        ******************  /callsets  *********************
        This request maps to the body of `POST /callsets/search` as JSON.
    ga4ghSearchCallSetsResponse:
      type: object
      properties:
        call_sets:
          type: array
          items:
            $ref: '#/components/schemas/CallSet'
          description: The list of matching call sets.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: This is the response from `POST /callsets/search` expressed as JSON.
    ga4ghSearchVariantSetsRequest:
      type: object
      properties:
        dataset_id:
          type: string
          description: The `Dataset` to search.
        page_size:
          type: integer
          format: int32
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets. To

            get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.
      description: |-
        ******************  /variantsets  *********************
        This request maps to the body of `POST /variantsets/search` as JSON.
    ga4ghSearchVariantSetsResponse:
      type: object
      properties:
        variant_sets:
          type: array
          items:
            $ref: '#/components/schemas/VariantSet'
          description: The list of matching variant sets.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: This is the response from `POST /variantsets/search` expressed as JSON.
    ga4ghSearchVariantsRequest:
      type: object
      properties:
        variant_set_id:
          type: string
          description: The `VariantSet` to search.
        call_set_ids:
          type: array
          items:
            type: string
          description: |-
            Only return variant calls which belong to call sets with these IDs.
            If unspecified, return all variants and no variant call objects.
        reference_name:
          type: string
          description: Required. Only return variants on this reference.
        start:
          type: string
          format: int64
          description: >-
            Required. The beginning of the window (0-based, inclusive) for

            which overlapping variants should be returned.

            Genomic positions are non-negative integers less than reference
            length.

            Requests spanning the join of circular genomes are represented as

            two requests one on each side of the join (position 0).
        end:
          type: string
          format: int64
          description: >-
            Required. The end of the window (0-based, exclusive) for which
            overlapping

            variants should be returned.
        page_size:
          type: integer
          format: int32
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.
      description: |-
        ******************  /variants  *********************
        This request maps to the body of `POST /variants/search` as JSON.
    ga4ghSearchVariantsResponse:
      type: object
      properties:
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
          description: |-
            The list of matching variants.
            If the `callSetId` field on the returned calls is not present,
            the ordering of the call sets from a `SearchCallSetsRequest`
            over the parent `VariantSet` is guaranteed to match the ordering
            of the calls on each `Variant`. The number of results will also be
            the same.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: This is the response from `POST /variants/search` expressed as JSON.
    ga4ghVariant:
      type: object
      properties:
        id:
          type: string
          description: The variant ID.
        variant_set_id:
          type: string
          description: >-
            The ID of the `VariantSet` this variant belongs to. This
            transitively

            defines

            the `ReferenceSet` against which the `Variant` is to be interpreted.
        names:
          type: array
          items:
            type: string
          description: 'Names for the variant, for example a RefSNP ID.'
        created:
          type: string
          format: int64
          description: The date this variant was created in milliseconds from the epoch.
        updated:
          type: string
          format: int64
          description: |-
            The time at which this variant was last updated in
            milliseconds from the epoch.
        reference_name:
          type: string
          title: |-
            The reference on which this variant occurs.
            (e.g. `chr20` or `X`)
        start:
          type: string
          format: int64
          description: >-
            The start position at which this variant occurs (0-based).

            This corresponds to the first base of the string of reference bases.

            Genomic positions are non-negative integers less than reference
            length.

            Variants spanning the join of circular genomes are represented as

            two variants one on each side of the join (position 0).
        end:
          type: string
          format: int64
          description: |-
            The end position (exclusive), resulting in [start, end) closed-open
            interval.
            This is typically calculated by `start + referenceBases.length`.
        reference_bases:
          type: string
          description: |-
            The reference bases for this variant. They start at the given start
            position.
        alternate_bases:
          type: array
          items:
            type: string
          description: >-
            The bases that appear instead of the reference bases. Multiple
            alternate

            alleles are possible.
        attributes:
          $ref: '#/components/schemas/Attributes'
        calls:
          type: array
          items:
            $ref: '#/components/schemas/Call'
          description: >-
            The variant calls for this particular variant. Each one represents
            the

            determination of genotype with respect to this variant. `Call`s in
            this

            array are implicitly associated with this `Variant`.
        variant_type:
          type: string
          title: |-
            The "variant_type" is used to denote e.g. structural variants.
            Examples:
              DUP  : duplication of sequence following "start"; not necessarily in situ
              DEL  : deletion of sequence following "start"
        svlen:
          type: string
          format: int64
          title: >-
            Length of the - if labeled as such in variant_type - structural
            variation.

            Based on the use in VCFv4.2
        cipos:
          type: array
          items:
            type: integer
            format: int32
          title: >-
            In the case of structural variants, start and end of the variant may
            not

            be known with an exact base position. "cipos" provides an interval
            with

            high confidence for the start position. The interval is provided by
            0 or

            2 signed integers which are added to the start position.

            Based on the use in VCFv4.2

            Example:
              [ -12000, 1000 ]
        ciend:
          type: array
          items:
            type: integer
            format: int32
          title: >-
            Similar to "cipos", but for the variant's end position (which is
            derived

            from start + svlen).

            Example:
              [ -1000, 0 ]
        filters_applied:
          type: boolean
          format: boolean
          description: |-
            True if filters were applied for this variant. VCF column 7 "FILTER"
            any value other than the missing value.
        filters_passed:
          type: boolean
          format: boolean
          description: |-
            True if all filters for this variant passed. VCF column 7 "FILTER"
            value PASS.
        filters_failed:
          type: array
          items:
            type: string
          description: >-
            Zero or more filters that failed for this variant. VCF column 7
            "FILTER"

            shared across all alleles in the same VCF record.
      description: >-
        A `Variant` represents a change in DNA sequence relative to some
        reference.

        For example, a variant could represent a SNP or an insertion.

        Variants belong to a `VariantSet`.

        This is equivalent to a row in VCF.
    ga4ghVariantSet:
      type: object
      properties:
        id:
          type: string
          description: The variant set ID.
        name:
          type: string
          description: The variant set name.
        dataset_id:
          type: string
          description: The ID of the dataset this variant set belongs to.
        reference_set_id:
          type: string
          description: |-
            The ID of the reference set that describes the sequences used by the
            variants in this set.
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/VariantSetMetadata'
          description: >-
            Optional metadata associated with this variant set.

            This array can be used to store information about the variant set,
            such as

            information found in VCF header fields, that isn't already available
            in

            first class fields such as "name".
      description: >-
        A VariantSet is a collection of variants and variant calls intended to
        be

        analyzed together.
    ga4ghVariantSetMetadata:
      type: object
      properties:
        key:
          type: string
          description: The top-level key.
        value:
          type: string
          description: The value field for simple metadata.
        id:
          type: string
          title: |-
            User-provided ID field, not enforced by this API.
            Two or more pieces of structured metadata with identical
            id and key fields are considered equivalent.
            FIXME: If it's not enforced, then why can't it be null?
        type:
          type: string
          description: The type of data.
        number:
          type: string
          description: >-
            The number of values that can be included in a field described by
            this

            metadata.
        description:
          type: string
          description: A textual description of this metadata.
        attributes:
          $ref: '#/components/schemas/Attributes'
      description: This metadata represents VCF header information.
    NullValue:
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
      description: >-
        `NullValue` is a singleton enumeration to represent the null value for
        the

        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
    ListValue:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
          description: Repeated field of dynamically typed values.
      description: |-
        `ListValue` is a wrapper around a repeated field of values.

        The JSON representation for `ListValue` is JSON array.
    Struct:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Value'
          description: Unordered map of dynamically typed values.
      description: |-
        `Struct` represents a structured data value, consisting of fields
        which map to dynamically typed values. In some languages, `Struct`
        might be supported by a native representation. For example, in
        scripting languages like JS a struct is represented as an
        object. The details of that representation are described together
        with the proto support for the language.

        The JSON representation for `Struct` is JSON object.
    Value:
      type: object
      properties:
        null_value:
          $ref: '#/components/schemas/NullValue'
        number_value:
          type: number
          format: double
          description: Represents a double value.
        string_value:
          type: string
          description: Represents a string value.
        bool_value:
          type: boolean
          format: boolean
          description: Represents a boolean value.
        struct_value:
          $ref: '#/components/schemas/Struct'
        list_value:
          $ref: '#/components/schemas/ListValue'
      description: |-
        `Value` represents a dynamically typed value which can be either
        null, a number, a string, a boolean, a recursive struct value, or a
        list of values. A producer of value is expected to set one of that
        variants, absence of any variant indicates an error.

        The JSON representation for `Value` is JSON value.