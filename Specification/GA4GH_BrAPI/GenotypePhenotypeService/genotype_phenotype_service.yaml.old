openapi: 3.0.0
info:
  title: ga4gh/genotype_phenotype_service.proto
  version: version not set
paths:
  /v0.6.0a10/featurephenotypeassociations/search:
    post:
      summary: >-
        Gets a list of genotype-phenotype assoications accessible through the
        API.

        `POST /featurephenotypeassociations/search` must accept a JSON version
        of

        `SearchPhenotypesRequest` as the post body and will return a JSON
        version

        of `SearchPhenotypeAssociationSetsResponse`.
      operationId: SearchPhenotypeAssociations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGenotypePhenotypeResponse'
      tags:
        - GenotypePhenotypeService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchGenotypePhenotypeRequest'
        required: true
  /v0.6.0a10/phenotypeassociationsets/search:
    post:
      summary: >-
        Gets a list of association sets accessible through the API.

        `POST /phenotypeassociationsets/search` must accept a JSON version of

        `SearchPhenotypeAssociationSetsRequest` as the post body and will return
        a JSON version

        of `SearchPhenotypeAssociationSetsResponse`.
      operationId: SearchPhenotypeAssociationSets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SearchPhenotypeAssociationSetsResponse
      tags:
        - GenotypePhenotypeService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPhenotypeAssociationSetsRequest'
        required: true
  /v0.6.0a10/phenotypes/search:
    post:
      summary: >-
        Gets a list of phenotypes accessible through the API.

        `POST /phenotypes/search` must accept a JSON version of

        `SearchPhenotypesRequest` as the post body and will return a JSON
        version

        of `SearchPhenotypeAssociationSetsResponse`.
      operationId: SearchPhenotype
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPhenotypesResponse'
      tags:
        - GenotypePhenotypeService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPhenotypesRequest'
        required: true
components:
  schemas:
    ga4ghEnvironmentalContext:
      type: object
      properties:
        id:
          type: string
          description: The Environment ID.
        environment_type:
          $ref: '#/components/schemas/OntologyTerm'
        description:
          type: string
          title: |-
            A textual description of the environment. This is used to complement
            the structured description in the environmentType field
      description: |-
        The context in which a genotype gives rise to a phenotype.
        This is fairly open-ended; as a stub we have a simple ontology term.
        For example, a controlled term for a drug, or perhaps an instance of a
        complex environment including temperature and air quality, or perhaps
        the anatomical environment (gut vs tissue type vs whole organism).
    ga4ghEvidence:
      type: object
      properties:
        evidence_type:
          $ref: '#/components/schemas/OntologyTerm'
        description:
          type: string
          title: >-
            A textual description of the evidence. This is used to complement
            the

            structured description in the evidence_type field
        info:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ListValue'
          description: Additional annotation data in key-value pairs.
      description: >-
        Evidence for the phenotype association.

        This is also a stub for further expansion.  We should consider moving
        this into

        it's own schema.
    ga4ghEvidenceQuery:
      type: object
      properties:
        evidenceType:
          $ref: '#/components/schemas/OntologyTerm'
        description:
          type: string
          title: >-
            The system may support regex.
            https://www.w3.org/TR/xpath-functions/#regex-syntax
        external_identifiers:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
          title: >-
            Only match Evidence messages that have any of these external
            identifiers
      description: Evidence for the phenotype association.
    ga4ghExternalIdentifier:
      type: object
      properties:
        database:
          type: string
          description: 'The source of the identifier, e.g. `Ensembl`.'
        identifier:
          type: string
          description: 'The ID defined by the external database, e.g. `ENST00000000000`.'
        version:
          type: string
          description: 'The version of the object or the database, e.g. `78`.'
      title: Identifier from a public database
    ga4ghFeaturePhenotypeAssociation:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for the association.
        phenotype_association_set_id:
          type: string
          description: >-
            The ID of the PhenotypeAssociationSet this
            FeaturePhenotypeAssociation

            belongs to.
        feature_ids:
          type: array
          items:
            type: string
          description: |-
            The set of features of the organism that bears the phenotype.
            This could be as complete as a full complement of variants,
            or as minimal as the confirmed variants that are known causation
            for the annotated phenotype.
            Examples of features could be variations at the nucleotide level,
            large rearrangements at the chromosome level, or relevant epigenetic
            markers.  Relevant genomic feature types are suggested to be
            those typed in the Sequence Ontology (SO).
            The feature set can have only one item, and must not be null.
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/Evidence'
          description: |-
            The evidence for this specific instance of association between the
            features and the phenotype.
        phenotype:
          $ref: '#/components/schemas/PhenotypeInstance'
        description:
          type: string
          description: A textual description of the association.
        environmental_contexts:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentalContext'
          title: >-
            The context in which the phenotype arises.

            Multiple contexts can be specified - these are assumed to all hold
            together
        info:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ListValue'
          description: Additional annotation data in key-value pairs.
      description: |-
        An association between one or more genomic features and a phenotype.
        The instance of association allows us to link a feature to a phenotype,
        multiple times, each bearing potentially different levels of confidence,
        such as resulting from alternative experiments and analysis.
    ga4ghOntologyTerm:
      type: object
      properties:
        term_id:
          type: string
          description: >-
            Ontology term identifier - the CURIE for an ontology term. It

            differs from the standard GA4GH schema's :ref:`id
            `

            in that it is a CURIE pointing to an information resource outside of
            the

            scope of the schema or its resource implementation.
        term:
          type: string
          description: >-
            Ontology term - the label of the ontology term the termId is
            pointing to.
      title: |-
        An ontology term describing an attribute. (e.g. the phenotype attribute
        'polydactyly' from HPO)
    ga4ghPhenotypeAssociationSet:
      type: object
      properties:
        id:
          type: string
          description: The phenotype association set ID.
        name:
          type: string
          description: The phenotype association set name.
        dataset_id:
          type: string
          description: The ID of the dataset this phenotype association set belongs to.
        info:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ListValue'
          description: Optional additional information for this phenotype association set.
      description: The top level container for phenotype association data.
    ga4ghPhenotypeInstance:
      type: object
      properties:
        id:
          type: string
          description: The Phenotype ID.
        type:
          $ref: '#/components/schemas/OntologyTerm'
        qualifier:
          type: array
          items:
            $ref: '#/components/schemas/OntologyTerm'
          title: >-
            PATO is recommended.  Often this qualifier might be for
            abnormal/normal,

            or severity.

            For example, severe: http://purl.obolibrary.org/obo/PATO_0000396

            or abnormal: http://purl.obolibrary.org/obo/PATO_0000460
        age_of_onset:
          $ref: '#/components/schemas/OntologyTerm'
        description:
          type: string
          description: >-
            A textual description of the phenotype. This is used to complement
            the

            structured phenotype description in the type field.
        info:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ListValue'
          description: Additional annotation data in key-value pairs.
      title: >-
        An association to a phenotype and related information.

        This record is intended primarily to be used in conjunction with
        variants, but

        the record can also be composed with other kinds of entities such as
        diseases
    ga4ghSearchGenotypePhenotypeRequest:
      type: object
      properties:
        phenotype_association_set_id:
          type: string
          title: The `PhenotypeAssociationSet` to search. Mandatory
        feature_ids:
          type: array
          items:
            type: string
          description: At least one feature_id or phenotype_id must be provided.
        phenotype_ids:
          type: array
          items:
            type: string
          title: Phenotype IDs
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/EvidenceQuery'
          title: evidence
        page_size:
          type: string
          format: int64
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `nextPageToken` from the previous response.
      description: >-
        This request maps to the body of `POST
        /featurephenotypeassociations/search` as JSON.


        The goal here is to allow users to query using one or more of

        Genotype, Phenotype, Environment, and Evidence.


        A query using one of the above items is to mean, by default,

        that the remainder of the query is as a "wildcard", such

        that all matches to just that query term would come back.

        Combinations of the above are to act like AND rather than OR.


        The "genotype" part of the query methods can be one or more

        genomic features.  Associations can be made at many

        levels of granularity (from whole genotypes down to individual

        SNVs), but users may use these methods with partial or

        inexact information.  Therefore, the query methods must be

        able to support query of some or all of the associated features.

        Furthermore, use of the relationships between genomic features

        means that when querying for a gene, any variants to that

        gene are also returned.  For example, a query with

        BRCA2 would mean that in addition to any direct associations

        to the BRCA2, all associations to sequence variants of BRCA2 would also

        be returned.  Similarly, queries with OntologyTerms should perform

        the subclass closure.


        Each query can be made against a string, an array of external

        identifers (such as for gene or SNP ids), ontology term ids, or

        full feature/phenotype/evidence objects.
    ga4ghSearchGenotypePhenotypeResponse:
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: '#/components/schemas/FeaturePhenotypeAssociation'
          description: The list of matching FeaturePhenotypeAssociation.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: >-
        This is the response from `POST /genotypephenotype/search` expressed as
        JSON.
    ga4ghSearchPhenotypeAssociationSetsRequest:
      type: object
      properties:
        dataset_id:
          type: string
          title: The `Dataset` to search. Mandatory
        page_size:
          type: string
          format: int64
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `nextPageToken` from the previous response.
      description: >-
        This request maps to the body of `POST /phenotypeassociationsets/search`
        as JSON.
    ga4ghSearchPhenotypeAssociationSetsResponse:
      type: object
      properties:
        phenotype_association_sets:
          type: array
          items:
            $ref: '#/components/schemas/PhenotypeAssociationSet'
          description: The list of matching phenotype association sets.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: >-
        This is the response from `POST /phenotypeassociationsets/search`
        expressed as JSON.
    ga4ghSearchPhenotypesRequest:
      type: object
      properties:
        phenotype_association_set_id:
          type: string
          title: The `PhenotypeAssociationSet` to search. Mandatory
        id:
          type: string
          title: |-
            Phenotype ID
            TODO remove if a get-by-phenotype ID endpoint is added
        description:
          type: string
          title: >-
            The system may support regex.
            https://www.w3.org/TR/xpath-functions/#regex-syntax
        type:
          $ref: '#/components/schemas/OntologyTerm'
        qualifiers:
          type: array
          items:
            $ref: '#/components/schemas/OntologyTerm'
          title: terms should be OR'd together. e.g. (severe OR abnormal)
        age_of_onset:
          $ref: '#/components/schemas/OntologyTerm'
        page_size:
          type: string
          format: int64
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.
    ga4ghSearchPhenotypesResponse:
      type: object
      properties:
        phenotypes:
          type: array
          items:
            $ref: '#/components/schemas/PhenotypeInstance'
          description: The list of matching PhenotypeInstances.
        next_page_token:
          type: string
          description: >-
            The continuation token, which is used to page through large result
            sets.

            Provide this value in a subsequent request to return the next page
            of

            results. This field will be empty if there aren't any additional
            results.
      description: This is the response from `POST /phenotypes/search` expressed as JSON.
    NullValue:
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
      description: >-
        `NullValue` is a singleton enumeration to represent the null value for
        the

        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
    ListValue:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
          description: Repeated field of dynamically typed values.
      description: |-
        `ListValue` is a wrapper around a repeated field of values.

        The JSON representation for `ListValue` is JSON array.
    Struct:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Value'
          description: Unordered map of dynamically typed values.
      description: |-
        `Struct` represents a structured data value, consisting of fields
        which map to dynamically typed values. In some languages, `Struct`
        might be supported by a native representation. For example, in
        scripting languages like JS a struct is represented as an
        object. The details of that representation are described together
        with the proto support for the language.

        The JSON representation for `Struct` is JSON object.
    Value:
      type: object
      properties:
        null_value:
          $ref: '#/components/schemas/NullValue'
        number_value:
          type: number
          format: double
          description: Represents a double value.
        string_value:
          type: string
          description: Represents a string value.
        bool_value:
          type: boolean
          format: boolean
          description: Represents a boolean value.
        struct_value:
          $ref: '#/components/schemas/Struct'
        list_value:
          $ref: '#/components/schemas/ListValue'
      description: |-
        `Value` represents a dynamically typed value which can be either
        null, a number, a string, a boolean, a recursive struct value, or a
        list of values. A producer of value is expected to set one of that
        variants, absence of any variant indicates an error.

        The JSON representation for `Value` is JSON value.